apiVersion: apps/v1
kind: Deployment
metadata:
  name: faf-policy-server
  labels:
    app: faf-policy-server
spec:
  replicas: 1
  selector:
    matchLabels:
      app: faf-policy-server
  template:
    metadata:
      labels:
        app: faf-policy-server
    spec:
      initContainers:
        - name: load-uid-verifier
          image: alpine/git
          command: [ 'sh', '-c', 'GIT_LFS_SKIP_SMUDGE=1 git clone https://$GITHUB_USER:$GITHUB_TOKEN@github.com/FAForever/uid-verifier.git /tmp/uid-verifier && mv /tmp/uid-verifier/verifier/* /app/verifier' ]
          volumeMounts:
            - mountPath: /app/verifier
              name: uid-verifier
      containers:
        - image: faforever/faf-policy-server:v1.22
          name: faf-policy-server
          envFrom:
            - configMapRef:
                name: faf-policy-server
          ports:
            - containerPort: 8097
          volumeMounts:
            - mountPath: /app/verifier
              name: uid-verifier
      volumes:
        - name: uid-verifier
          emptyDir: {}
          
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: faf-policy-server
  labels:
    app: faf-policy-server
data:
  APP_PORT: "8097"
  DATABASE_HOST: "faf-db"
  DATABASE_PASSWORD: "banana"
  DATABASE_PORT: "3306"
  DATABASE_USER: "faf-policy-server"
  DATABASE_NAME: "faf"
  # Since the application isn't structured correctly yet, this is required to find the 'verifier'
  PYTHONPATH: "."
    
---
apiVersion: v1
kind: Service
metadata:
  name: faf-policy-server
  labels:
    app: faf-policy-server
spec:
  selector:
    app: faf-policy-server
  ports:
    - port: 8097
      targetPort: 8097