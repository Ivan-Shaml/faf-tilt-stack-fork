kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: traefik-ingress-controller

rules:
  - apiGroups:
      - ""
    resources:
      - services
      - endpoints
      - secrets
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - extensions
      - networking.k8s.io
    resources:
      - ingresses
      - ingressclasses
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - extensions
      - networking.k8s.io
    resources:
      - ingresses/status
    verbs:
      - update
  - apiGroups:
      - traefik.io
    resources:
      - middlewares
      - middlewaretcps
      - ingressroutes
      - traefikservices
      - ingressroutetcps
      - ingressrouteudps
      - tlsoptions
      - tlsstores
      - serverstransports
      - serverstransporttcps
    verbs:
      - get
      - list
      - watch
      
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: traefik-ingress-controller

---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: traefik-ingress-controller

roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: traefik-ingress-controller
subjects:
  - kind: ServiceAccount
    name: traefik-ingress-controller
    namespace: default

---
kind: Deployment
apiVersion: apps/v1
metadata:
  name: traefik-deployment
  labels:
    app: traefik

spec:
  replicas: 1
  selector:
    matchLabels:
      app: traefik
  template:
    metadata:
      labels:
        app: traefik
    spec:
      serviceAccountName: traefik-ingress-controller
      containers:
        - name: traefik
          image: traefik:v3.0
          args:
            - --api.insecure
            - --providers.kubernetescrd
            - --entryPoints.api.address=:8010
            - --entryPoints.web.address=:80
            - --entrypoints.api.http.encodequerysemicolons=true
          ports:
            - name: web
              containerPort: 80
            - name: api
              containerPort: 8010
            - name: dashboard
              containerPort: 8080
              
---
apiVersion: v1
kind: Service
metadata:
  name: traefik-dashboard-service

spec:
  ports:
    - port: 8080
      targetPort: dashboard
  selector:
    app: traefik
    
---
apiVersion: v1
kind: Service
metadata:
  name: traefik-web-service

spec:
  type: LoadBalancer
  ports:
    - port: 80
      targetPort: web
  selector:
    app: traefik
    
---
apiVersion: v1
kind: Service
metadata:
  name: traefik-api-service

spec:
  type: LoadBalancer
  ports:
    - targetPort: api
      port: 8010
  selector:
    app: traefik

---
apiVersion: traefik.io/v1alpha1
kind: IngressRoute
metadata:
  name: traefik
spec:
  entryPoints:
    - web
  routes:
    - match: Host(`traefik.localhost`)
      kind: Rule
      services:
        - name: traefik-dashboard-service
          port: 8080
